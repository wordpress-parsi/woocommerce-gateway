<?php

// scoper-autoload.php @generated by PhpScoper

$loader = require_once __DIR__.'/autoload.php';

// Exposed classes. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/configuration.md#exposing-classes
if (!class_exists('ComposerAutoloaderInit18ed11808f5e57998aa43b0ef56b8b58', false) && !interface_exists('ComposerAutoloaderInit18ed11808f5e57998aa43b0ef56b8b58', false) && !trait_exists('ComposerAutoloaderInit18ed11808f5e57998aa43b0ef56b8b58', false)) {
    spl_autoload_call('BitPayVendor\ComposerAutoloaderInit18ed11808f5e57998aa43b0ef56b8b58');
}
if (!class_exists('JsonMapper_Exception', false) && !interface_exists('JsonMapper_Exception', false) && !trait_exists('JsonMapper_Exception', false)) {
    spl_autoload_call('BitPayVendor\JsonMapper_Exception');
}
if (!class_exists('JsonMapper', false) && !interface_exists('JsonMapper', false) && !trait_exists('JsonMapper', false)) {
    spl_autoload_call('BitPayVendor\JsonMapper');
}
if (!class_exists('PrivateKeyTest', false) && !interface_exists('PrivateKeyTest', false) && !trait_exists('PrivateKeyTest', false)) {
    spl_autoload_call('BitPayVendor\PrivateKeyTest');
}
if (!class_exists('PublicKeyTest', false) && !interface_exists('PublicKeyTest', false) && !trait_exists('PublicKeyTest', false)) {
    spl_autoload_call('BitPayVendor\PublicKeyTest');
}
if (!class_exists('SinKeyTest', false) && !interface_exists('SinKeyTest', false) && !trait_exists('SinKeyTest', false)) {
    spl_autoload_call('BitPayVendor\SinKeyTest');
}
if (!class_exists('KeyTest', false) && !interface_exists('KeyTest', false) && !trait_exists('KeyTest', false)) {
    spl_autoload_call('BitPayVendor\KeyTest');
}
if (!class_exists('EncryptedFilesystemStorageTest', false) && !interface_exists('EncryptedFilesystemStorageTest', false) && !trait_exists('EncryptedFilesystemStorageTest', false)) {
    spl_autoload_call('BitPayVendor\EncryptedFilesystemStorageTest');
}
if (!class_exists('FilesystemStorageTest', false) && !interface_exists('FilesystemStorageTest', false) && !trait_exists('FilesystemStorageTest', false)) {
    spl_autoload_call('BitPayVendor\FilesystemStorageTest');
}
if (!class_exists('PointTest', false) && !interface_exists('PointTest', false) && !trait_exists('PointTest', false)) {
    spl_autoload_call('BitPayVendor\PointTest');
}
if (!class_exists('UtilTest', false) && !interface_exists('UtilTest', false) && !trait_exists('UtilTest', false)) {
    spl_autoload_call('BitPayVendor\UtilTest');
}
if (!class_exists('Base58Test', false) && !interface_exists('Base58Test', false) && !trait_exists('Base58Test', false)) {
    spl_autoload_call('BitPayVendor\Base58Test');
}
if (!class_exists('Secp256k1Test', false) && !interface_exists('Secp256k1Test', false) && !trait_exists('Secp256k1Test', false)) {
    spl_autoload_call('BitPayVendor\Secp256k1Test');
}
if (!class_exists('ErrorTest', false) && !interface_exists('ErrorTest', false) && !trait_exists('ErrorTest', false)) {
    spl_autoload_call('BitPayVendor\ErrorTest');
}
if (!class_exists('FingerprintTest', false) && !interface_exists('FingerprintTest', false) && !trait_exists('FingerprintTest', false)) {
    spl_autoload_call('BitPayVendor\FingerprintTest');
}
if (!class_exists('SecureRandomTest', false) && !interface_exists('SecureRandomTest', false) && !trait_exists('SecureRandomTest', false)) {
    spl_autoload_call('BitPayVendor\SecureRandomTest');
}
if (!class_exists('GmpEngineTest', false) && !interface_exists('GmpEngineTest', false) && !trait_exists('GmpEngineTest', false)) {
    spl_autoload_call('BitPayVendor\GmpEngineTest');
}
if (!class_exists('BcEngineTest', false) && !interface_exists('BcEngineTest', false) && !trait_exists('BcEngineTest', false)) {
    spl_autoload_call('BitPayVendor\BcEngineTest');
}
if (!class_exists('MathTest', false) && !interface_exists('MathTest', false) && !trait_exists('MathTest', false)) {
    spl_autoload_call('BitPayVendor\MathTest');
}

// Exposed functions. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/configuration.md#exposing-functions
if (!function_exists('get_plugins')) {
    function get_plugins() {
        return \BitPayVendor\get_plugins(...func_get_args());
    }
}
if (!function_exists('includeIfExists')) {
    function includeIfExists() {
        return \BitPayVendor\includeIfExists(...func_get_args());
    }
}
if (!function_exists('trigger_deprecation')) {
    function trigger_deprecation() {
        return \BitPayVendor\trigger_deprecation(...func_get_args());
    }
}

return $loader;
